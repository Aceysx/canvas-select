{"version":3,"file":"canvas-select.min.js","sources":["../src/Rect.ts","../src/Polygon.ts","../src/Dot.ts","../src/main.ts"],"sourcesContent":["import { BaseShape, Point } from './Types';\n\nexport default class Rect implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 1\n\n  active: boolean = false\n\n  creating: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point[]\n\n  constructor(coor: Point[], index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n\n  get ctrlsData() {\n    const [[x0, y0], [x1, y1]] = this.coor;\n    return [\n      [x0, y0],\n      [x0 + (x1 - x0) / 2, y0],\n      [x1, y0],\n      [x1, y0 + (y1 - y0) / 2],\n      [x1, y1],\n      [x0 + (x1 - x0) / 2, y1],\n      [x0, y1],\n      [x0, y0 + (y1 - y0) / 2],\n    ];\n  }\n}\n","import { BaseShape, Point } from './Types';\n\nexport default class Polygon implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 2\n\n  active: boolean = false\n\n  creating: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point[]\n\n  constructor(coor: Point[], index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n\n  get ctrlsData() {\n    return this.coor.length > 2 ? this.coor : [];\n  }\n}\n","import { BaseShape, Point } from './Types';\n\nexport default class Dot implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 3\n\n  active: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point\n\n  constructor(coor: Point, index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n}\n","import Rect from './Rect';\nimport Polygon from './Polygon';\nimport Dot from './Dot';\nimport { Point } from './Types';\nclass CanvasSelect {\n  lock: boolean = false // 只读模式\n\n  MIN_WIDTH: number = 10\n\n  MIN_HEIGHT: number = 10\n\n  strokeStyle = 'rgb(0, 0, 255)'\n\n  fillStyle = 'rgba(0, 0, 255,0.1)'\n\n  activeStrokeStyle = '#f00'\n\n  activeFillStyle = 'rgba(255, 0, 0,0.1)'\n\n  ctrlStrokeStyle = '#000'\n\n  ctrlFillStyle = '#fff'\n\n  ctrlRadius = 3\n\n  labelFillStyle = '#fff'\n\n  labelFont = '12px serif #000'\n\n  labelMaxLen = 5\n\n  EventList: object = {}\n\n  WIDTH: number\n\n  HEIGHT: number\n\n  canvas: HTMLCanvasElement\n\n  ctx: CanvasRenderingContext2D\n\n  dataset: Array<Rect | Polygon | Dot> = []\n\n  offlineCanvas: HTMLCanvasElement\n\n  offlineCtx: CanvasRenderingContext2D\n\n  remmber: number[][] // 记录锚点距离\n\n  movePoint: Point // 记录鼠标位置\n\n  remmberOrigin: number[] = [0, 0] // 记录背景图鼠标位移\n\n  createType: number = 0 // 0 不创建，1 创建矩形，2 创建多边形，3 创建点\n\n  ctrlIndex: number = -1\n\n  cursor: string = 'auto'\n\n  image: HTMLImageElement = new Image()\n\n  IMAGE_ORIGIN_WIDTH: number;\n\n  IMAGE_WIDTH: number;\n\n  IMAGE_ORIGIN_HEIGHT: number;\n\n  IMAGE_HEIGHT: number;\n\n  originX: number = 0; // 原点x\n\n  originY: number = 0; // 原点y\n\n  scaleStep: number = 0; // 缩放步长\n\n  constructor(el: HTMLCanvasElement | string, imgSrc?: string) {\n    const container = typeof el === 'string' ? document.querySelector(el) : el;\n    if (Object.prototype.toString.call(container).includes('HTMLCanvasElement')) {\n      this.canvas = container as HTMLCanvasElement;\n      this.ctx = this.canvas.getContext('2d');\n      this.WIDTH = this.canvas.clientWidth;\n      this.HEIGHT = this.canvas.clientHeight;\n      this.offlineCanvas = document.createElement('canvas');\n      this.offlineCanvas.width = this.WIDTH;\n      this.offlineCanvas.height = this.HEIGHT;\n      this.offlineCtx = this.offlineCanvas.getContext('2d');\n      this.init();\n      if (imgSrc) this.image.src = imgSrc;\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('HTMLCanvasElement is required!');\n    }\n  }\n\n  get activeShape() {\n    return this.dataset.find((x: Rect | Polygon | Dot) => x.active);\n  }\n\n  get scale() {\n    if (this.IMAGE_ORIGIN_WIDTH && this.IMAGE_WIDTH) {\n      return this.IMAGE_WIDTH / this.IMAGE_ORIGIN_WIDTH;\n    }\n    return 1;\n  }\n  /**\n   * 初始化\n   */\n  init() {\n    this.canvas.style.userSelect = 'none';\n    this.image.addEventListener('load', () => {\n      this.IMAGE_ORIGIN_WIDTH = this.IMAGE_WIDTH = this.image.width;\n      this.IMAGE_ORIGIN_HEIGHT = this.IMAGE_HEIGHT = this.image.height;\n      this.fitZoom();\n      this.emit('load');\n    });\n    this.canvas.addEventListener('contextmenu', (e) => {\n      if (this.lock) return;\n      e.preventDefault();\n    });\n    this.canvas.addEventListener('mousewheel', (e: WheelEvent) => {\n      if (this.lock) return;\n      e.preventDefault();\n      this.setScale(e.deltaY < 0);\n    });\n    this.canvas.addEventListener('mousedown', (e: MouseEvent) => {\n      const offsetX = e.offsetX / this.scale;\n      const offsetY = e.offsetY / this.scale;\n      const mousePoint: Point = [e.offsetX, e.offsetY];\n      if (this.lock) return;\n      if (e.buttons === 2) { // 点击鼠标右键\n        this.remmberOrigin = [e.offsetX - this.originX, e.offsetY - this.originY];\n      } else if (e.buttons === 1) {\n        // 点击到控制点\n        const activeShape = this.activeShape as Rect | Polygon;\n        const ctrls = activeShape?.ctrlsData || [];\n        this.ctrlIndex = ctrls.findIndex((coor: Point) => this.isPointInCircle(mousePoint, coor, this.ctrlRadius));\n        if (this.ctrlIndex > -1) {\n          const [x0, y0] = ctrls[this.ctrlIndex];\n          this.remmber = [[offsetX - x0, offsetY - y0]];\n          return;\n        }\n        // 是否点击到形状\n        const [targetShapeIndex, targetShape] = this.hoverOnShape(mousePoint);\n        const oncreating = this.activeShape?.type === 2 && (this.activeShape as Polygon).creating;\n        if (!oncreating && targetShapeIndex > -1) {\n          this.emit('select', targetShape)\n          this.dataset.forEach((item, i) => {\n            item.active = i === targetShapeIndex;\n          });\n          targetShape.dragging = true;\n          this.dataset.splice(targetShapeIndex, 1);\n          this.dataset.push(targetShape);\n          this.remmber = [];\n          if (targetShape.type === 3) {\n            const [x, y] = (targetShape as Dot).coor;\n            this.remmber = [[offsetX - x, offsetY - y]];\n          } else {\n            targetShape.coor.forEach((pt: any) => {\n              this.remmber.push([offsetX - pt[0], offsetY - pt[1]]);\n            });\n          }\n          this.update();\n        } else if (oncreating) {\n          // 多边形新增点\n          if (this.isInContent(e)) {\n            const pShape = this.activeShape as Polygon;\n            const [x, y] = pShape.coor[pShape.coor.length - 1];\n            if (x !== offsetX && y !== offsetY) {\n              pShape.coor.push([offsetX - this.originX / this.scale, offsetY - this.originY / this.scale]);\n              this.update();\n            }\n          }\n        } else if (this.createType && this.isInContent(e)) {\n          // 创建矩形/多边形\n          let newShape;\n          const curPoint: Point = [offsetX - this.originX / this.scale, offsetY - this.originY / this.scale];\n          if (this.createType === 1) {\n            newShape = new Rect([curPoint, curPoint], this.dataset.length);\n            newShape.creating = true;\n          } else if (this.createType === 2) {\n            newShape = new Polygon([curPoint], this.dataset.length);\n            newShape.creating = true;\n          } else if (this.createType === 3) {\n            newShape = new Dot(curPoint, this.dataset.length);\n            this.emit('add', newShape)\n          }\n          this.dataset.forEach((sp) => { sp.active = false; });\n          newShape.active = true;\n          newShape.uuid = CanvasSelect.createUuid();\n          this.dataset.push(newShape);\n          this.update();\n        } else if (this.activeShape) {\n          this.activeShape.active = false;\n          this.update();\n        }\n      }\n    });\n    this.canvas.addEventListener('mousemove', (e: MouseEvent) => {\n      const offsetX = e.offsetX / this.scale;\n      const offsetY = e.offsetY / this.scale;\n      if (this.lock) return;\n      // 记录鼠标位置\n      this.movePoint = [offsetX, offsetY];\n      if (e.buttons === 2 && e.which === 3) {\n        // 拖动背景\n        this.originX = e.offsetX - this.remmberOrigin[0];\n        this.originY = e.offsetY - this.remmberOrigin[1];\n        this.update();\n      } else if (e.buttons === 1) {\n        if (this.activeShape) {\n          if (this.ctrlIndex > -1 && this.isInContent(e)) {\n            const [[x, y]] = this.remmber;\n            this.emit('resize', this.activeShape);\n            // resize矩形\n            if (this.activeShape.type === 1) {\n              const [[x0, y0], [x1, y1]] = (this.activeShape as Rect).coor;\n              let coor: Point[] = [];\n              switch (this.ctrlIndex) {\n                case 0:\n                  coor = [[offsetX - x, offsetY - y], [x1, y1]];\n                  break;\n                case 1:\n                  coor = [[x0, offsetY - y], [x1, y1]];\n                  break;\n                case 2:\n                  coor = [[x0, offsetY - y], [offsetX - x, y1]];\n                  break;\n                case 3:\n                  coor = [[x0, y0], [offsetX - x, y1]];\n                  break;\n                case 4:\n                  coor = [[x0, y0], [offsetX - x, offsetY - y]];\n                  break;\n                case 5:\n                  coor = [[x0, y0], [x1, offsetY - y]];\n                  break;\n                case 6:\n                  coor = [[offsetX - x, y0], [x1, offsetY - y]];\n                  break;\n                case 7:\n                  coor = [[offsetX - x, y0], [x1, y1]];\n                  break;\n                default:\n                  break;\n              }\n              const [[a0, b0], [a1, b1]] = coor;\n              if ((a1 - a0) >= this.MIN_WIDTH && (b1 - b0) >= this.MIN_HEIGHT) {\n                this.activeShape.coor = coor;\n              } else {\n                this.emit('error', `宽不能小于${this.MIN_WIDTH},高不能小于${this.MIN_HEIGHT}。`);\n              }\n            } else if (this.activeShape.type === 2) {\n              this.activeShape.coor.splice(this.ctrlIndex, 1, [offsetX - this.originX / this.scale, offsetY - this.originY / this.scale]);\n            }\n            this.update();\n          } else if (this.activeShape.dragging) {\n            let coor = [];\n            const w = this.IMAGE_ORIGIN_WIDTH || this.WIDTH;\n            const h = this.IMAGE_ORIGIN_HEIGHT || this.HEIGHT;\n            if (this.activeShape.type === 3) {\n              const [t1, t2] = this.remmber[0];\n              const x = offsetX - t1;\n              const y = offsetY - t2;\n              if (x < 0 || x > w || y < 0 || y > h) return;\n              coor = [x, y];\n            } else {\n              for (let i = 0; i < this.activeShape.coor.length; i++) {\n                const tar = this.remmber[i];\n                const x = offsetX - tar[0];\n                const y = offsetY - tar[1];\n                if (x < 0 || x > w || y < 0 || y > h) return;\n                coor.push([x, y]);\n              }\n            }\n            (this.activeShape as any).coor = coor;\n            this.update();\n          } else if ((this.activeShape as Rect).creating && this.activeShape.type === 1 && this.isInContent(e)) {\n            const x = offsetX - this.originX / this.scale;\n            const y = offsetY - this.originY / this.scale;\n            this.activeShape.coor.splice(1, 1, [x, y]);\n          }\n        }\n        this.update();\n      } else if (this.activeShape?.type === 2 && (this.activeShape as Polygon)?.creating) {\n        this.update();\n      }\n    });\n    this.canvas.addEventListener('mouseup', (e) => {\n      if (this.lock) return;\n      this.remmber = [];\n      if (this.activeShape) {\n        this.activeShape.dragging = false;\n        if ((this.activeShape as Rect).creating && this.activeShape.type === 1) {\n          const [[x0, y0], [x1, y1]] = (this.activeShape as Rect).coor;\n          if (Math.abs(x0 - x1) < this.MIN_WIDTH || Math.abs(y0 - y1) < this.MIN_HEIGHT) {\n            this.dataset.pop();\n            this.emit('error', `宽不能小于${this.MIN_WIDTH},高不能小于${this.MIN_HEIGHT}`);\n          } else {\n            this.activeShape.coor = [[Math.min(x0, x1), Math.min(y0, y1)], [Math.max(x0, x1), Math.max(y0, y1)]];\n            (this.activeShape as Rect).creating = false;\n            this.emit('add', this.activeShape);\n          }\n          this.update();\n        }\n      }\n    });\n    this.canvas.addEventListener('dblclick', () => {\n      if (this.lock) return;\n      if (this.activeShape?.type === 2) {\n        if (this.activeShape.coor.length > 2) {\n          this.emit('add', this.activeShape);\n          (this.activeShape as Polygon).creating = false;\n          this.update();\n        }\n      }\n    });\n    document.body.addEventListener('keyup', (e: KeyboardEvent) => {\n      if (this.lock) return;\n      if (this.activeShape) {\n        if (this.activeShape.type === 2) {\n          if (e.key === 'Escape') {\n            this.deleteByIndex(this.activeShape.index);\n          } else if (e.key === 'Backspace') {\n            if (this.activeShape.coor.length > 1 && (this.activeShape as Polygon).creating) {\n              this.activeShape.coor.pop();\n            } else {\n              this.deleteByIndex(this.activeShape.index);\n            }\n          }\n          this.update();\n        } else if (this.activeShape && e.key === 'Backspace') {\n          this.deleteByIndex(this.activeShape.index);\n        }\n      }\n\n    });\n  }\n\n  /**\n   * 生成uuid\n   * @returns\n   */\n  static createUuid(): string {\n    const s: any[] = [];\n    const hexDigits = '0123456789abcdef';\n    for (let i = 0; i < 36; i++) {\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n    s[14] = '4';\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\n    s[8] = s[13] = s[18] = s[23] = '-';\n    const uuid = s.join('');\n    return uuid;\n  }\n\n  /**\n   * 设置数据\n   * @param data Array\n   */\n  setData(data: any[]) {\n    data.forEach((item, index) => {\n      if (Object.prototype.toString.call(item).indexOf('Object') > -1) {\n        const {\n          label, type, coor, uuid,\n        } = item;\n        let shape: (Rect | Polygon | Dot);\n        switch (type) {\n          case 1:\n            shape = new Rect(coor as Point[], index);\n            break;\n          case 2:\n            shape = new Polygon(coor as Point[], index);\n            break;\n          case 3:\n            shape = new Dot(coor as Point, index);\n            break;\n          default:\n            break;\n        }\n        shape.label = (label || '').toString();\n        shape.uuid = uuid || CanvasSelect.createUuid();\n        this.dataset.push(shape);\n      } else {\n        this.emit('error', `${item} in data must be an enumerable Object.`);\n      }\n    });\n    this.update();\n  }\n  /**\n   * 判断是非在标注实例上\n   * @param mousePoint 点击位置\n   * @returns \n   */\n  hoverOnShape(mousePoint: Point): [number, Rect | Polygon | Dot] {\n    let targetShapeIndex = -1;\n    const targetShape = this.dataset.reduceRight((target, shape, i) => {\n      if (!target) {\n        if (\n          (shape.type === 3 && this.isPointInCircle(mousePoint, shape.coor as Point, 3))\n          || (shape.type === 1 && this.isPointInRect(mousePoint, (shape as Rect).coor))\n          || (shape.type === 2 && this.isPointInPolygon(mousePoint, (shape as Polygon).coor))\n        ) {\n          targetShapeIndex = i;\n          target = shape;\n        }\n      }\n      return target;\n    }, null);\n    return [targetShapeIndex, targetShape];\n  }\n\n  /**\n   * 判断鼠标是否在背景图内部\n   * @param e MouseEvent\n   * @returns 布尔值\n   */\n  isInContent(e: MouseEvent): boolean {\n    const offsetX = e.offsetX / this.scale;\n    const offsetY = e.offsetY / this.scale;\n    return offsetX >= this.originX / this.scale && offsetY >= this.originY / this.scale\n      && offsetX <= this.originX / this.scale + this.IMAGE_ORIGIN_WIDTH && offsetY <= this.originY / this.scale + this.IMAGE_ORIGIN_HEIGHT;\n  }\n  /**\n   * 判断是否在矩形内\n   * @param point 坐标\n   * @param coor 区域坐标\n   * @returns 布尔值\n   */\n  isPointInRect(point: Point, coor: Point[]): boolean {\n    const [x, y] = point;\n    const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\n    return x0 + this.originX <= x && x <= x1 + this.originX && y0 + this.originY <= y && y <= y1 + this.originY;\n  }\n  /**\n   * 判断是否在多边形内\n   * @param point 坐标\n   * @param coor 区域坐标\n   * @returns 布尔值\n   */\n  isPointInPolygon(point: Point, coor: Point[]): boolean {\n    this.offlineCtx.save();\n    this.offlineCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n    this.offlineCtx.translate(this.originX, this.originY);\n    this.offlineCtx.beginPath();\n    coor.forEach((pt, i) => {\n      const [x, y] = pt.map((a) => Math.round(a * this.scale));\n      if (i === 0) {\n        this.offlineCtx.moveTo(x, y);\n      } else {\n        this.offlineCtx.lineTo(x, y);\n      }\n    });\n    this.offlineCtx.closePath();\n    this.offlineCtx.fill();\n    const areaData = this.offlineCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\n    const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\n    this.offlineCtx.restore();\n    return areaData.data[index + 3] !== 0;\n  }\n  /**\n   * 判断是否在圆内\n   * @param point 坐标\n   * @param center 圆心\n   * @param r 半径\n   * @returns 布尔值\n   */\n  isPointInCircle(point: Point, center: Point, r: number): boolean {\n    const [x, y] = point;\n    const [x0, y0] = center.map((a) => a * this.scale);\n    const distance = Math.sqrt((x0 + this.originX - x) ** 2 + (y0 + this.originY - y) ** 2);\n    return distance <= r;\n  }\n  /**\n   * 绘制矩形\n   * @param shape 标注实例\n   * @returns \n   */\n  drawRect(shape: Rect) {\n    if (shape.coor.length !== 2) return;\n    const [[x0, y0], [x1, y1]] = shape.coor.map((a) => a.map((b) => Math.round(b * this.scale)));\n    this.ctx.save();\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.strokeStyle = (shape.active || shape.creating) ? this.activeStrokeStyle : this.strokeStyle;\n    const w = x1 - x0;\n    const h = y1 - y0;\n    this.ctx.strokeRect(x0, y0, w, h);\n    if (!shape.creating) this.ctx.fillRect(x0, y0, w, h);\n    this.ctx.restore();\n    this.drawLabel(shape.coor[0], shape.label);\n  }\n  /**\n   * 绘制多边形\n   * @param shape 标注实例\n   */\n  drawPolygon(shape: Polygon) {\n    this.ctx.save();\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.strokeStyle = (shape.active || shape.creating) ? this.activeStrokeStyle : this.strokeStyle;\n    this.ctx.beginPath();\n    shape.coor.forEach((el, i) => {\n      const [x, y] = el.map((a) => Math.round(a * this.scale));\n      if (i === 0) {\n        this.ctx.moveTo(x, y);\n      } else {\n        this.ctx.lineTo(x, y);\n      }\n    });\n    if (shape.creating) {\n      const [x, y] = this.movePoint.map((a) => Math.round(a * this.scale));\n      this.ctx.lineTo(x - this.originX, y - this.originY);\n    } else if (shape.coor.length > 2) {\n      this.ctx.closePath();\n    }\n    this.ctx.fill();\n    this.ctx.stroke();\n    this.ctx.restore();\n    this.drawLabel(shape.coor[0], shape.label);\n  }\n  /**\n   * 绘制点\n   * @param shape 标注实例\n   */\n  drawDot(shape: Dot) {\n    const [x, y] = shape.coor.map((a) => a * this.scale);\n    this.ctx.save();\n    this.ctx.fillStyle = this.ctrlFillStyle;\n    this.ctx.strokeStyle = shape.active ? this.activeStrokeStyle : this.strokeStyle;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.fill();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.stroke();\n    this.ctx.restore();\n    this.drawLabel(shape.coor, shape.label);\n  }\n  /**\n   * 绘制控制点\n   * @param point 坐标\n   */\n  drawCtrl(point: Point) {\n    const [x, y] = point.map((a) => a * this.scale);\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.ctrlFillStyle;\n    this.ctx.strokeStyle = this.ctrlStrokeStyle;\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.fill();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n  /**\n   * 绘制控制点列表\n   * @param shape 标注实例\n   */\n  drawCtrlList(shape: Rect | Polygon) {\n    shape.ctrlsData.forEach((point) => {\n      this.drawCtrl(point);\n    });\n  }\n  /**\n   * 绘制label\n   * @param point 位置\n   * @param label 文本\n   */\n  drawLabel(point: Point, label: string = '') {\n    if (label.length) {\n      const newStr = label.length < this.labelMaxLen + 1 ? label : (`${label.substr(0, this.labelMaxLen)}...`);\n      const text = this.ctx.measureText(newStr);\n      const [x, y] = point.map((a) => a * this.scale);\n      const toleft = (this.IMAGE_ORIGIN_WIDTH - point[0]) < (text.width + 4) / this.scale;\n      const toTop = (this.IMAGE_ORIGIN_HEIGHT - point[1]) < 16 / this.scale;\n      this.ctx.save();\n      this.ctx.fillStyle = this.labelFillStyle;\n      this.ctx.fillRect(toleft ? (x - text.width - 3) : (x + 1), toTop ? (y - 15) : y + 1, text.width + 4, 16);\n      this.ctx.font = this.labelFont;\n      this.ctx.strokeText(newStr, toleft ? (x - text.width - 2) : (x + 2), toTop ? (y - 4) : y + 12, 80);\n      this.ctx.restore();\n    }\n  }\n\n  /**\n   * 绘制背景图片\n   */\n  paintImage() {\n    this.ctx.drawImage(this.image, 0, 0, this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n  }\n\n  /**\n   * 更新画布\n   */\n  update() {\n    this.ctx.save();\n    this.clear();\n    this.ctx.translate(this.originX, this.originY);\n    this.paintImage();\n    this.dataset.forEach((shape) => {\n      switch (shape.type) {\n        case 1:\n          this.drawRect(shape as Rect);\n          break;\n        case 2:\n          this.drawPolygon(shape as Polygon);\n          break;\n        case 3:\n          this.drawDot(shape as Dot);\n          break;\n        default:\n          break;\n      }\n    });\n    if (this.activeShape && [1, 2].includes(this.activeShape.type)) {\n      this.drawCtrlList(this.activeShape as Rect | Polygon);\n    }\n    this.ctx.restore();\n  }\n\n  /**\n   * 删除指定矩形\n   * @param index number\n   */\n  deleteByIndex(index: number) {\n    const num = this.dataset.findIndex((x) => x.index === index);\n    if (num > -1) {\n      this.emit('delete', this.dataset[num]);\n      this.dataset.splice(num, 1);\n      this.dataset.forEach((item, i) => { item.index = i; });\n      this.update();\n    }\n  }\n\n  /**\n   * 计算缩放步长\n   * @param init 是否为init\n   */\n  calcStep(init?: boolean) {\n    if (init) {\n      this.scaleStep = 100;\n      this.setScale(false);\n    }\n    if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\n      this.setScale(false);\n      this.calcStep();\n    }\n  }\n\n  /**\n   * 缩放\n   * @param type true放大，false，缩小\n   */\n  setScale(type: boolean) {\n    if (this.lock) return;\n    if ((!type && this.IMAGE_WIDTH <= 20) || (type && this.IMAGE_WIDTH >= this.WIDTH * 100)) return;\n    if (type) { this.scaleStep++; } else { this.scaleStep--; }\n    const abs = Math.abs(this.scaleStep);\n    const width = this.IMAGE_WIDTH;\n    this.IMAGE_WIDTH = Math.round(this.IMAGE_ORIGIN_WIDTH * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n    this.IMAGE_HEIGHT = Math.round(this.IMAGE_ORIGIN_HEIGHT * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n    this.stayPosition(this.IMAGE_WIDTH / width);\n    this.update();\n  }\n\n  /**\n   * 适配背景图\n   */\n  fitZoom() {\n    this.calcStep(true);\n    if (this.IMAGE_HEIGHT / this.IMAGE_WIDTH >= this.HEIGHT / this.WIDTH) {\n      this.IMAGE_WIDTH = this.IMAGE_ORIGIN_WIDTH / (this.IMAGE_ORIGIN_HEIGHT / this.HEIGHT);\n      this.IMAGE_HEIGHT = this.HEIGHT;\n    } else {\n      this.IMAGE_WIDTH = this.WIDTH;\n      this.IMAGE_HEIGHT = this.IMAGE_ORIGIN_HEIGHT / (this.IMAGE_ORIGIN_WIDTH / this.WIDTH);\n    }\n    this.originX = (this.WIDTH - this.IMAGE_WIDTH) / 2;\n    this.originY = (this.HEIGHT - this.IMAGE_HEIGHT) / 2;\n    this.update();\n  }\n\n  /**\n   * 保持缩放中心\n   * @param scale nummer\n   */\n  stayPosition(scale: number) {\n    this.originX = this.WIDTH / 2 - (this.WIDTH / 2 - this.originX) * scale;\n    this.originY = this.HEIGHT / 2 - (this.HEIGHT / 2 - this.originY) * scale;\n  }\n\n  /**\n   * 注册事件\n   * @param eventName 事件名称\n   * @param cb 回调方法\n   */\n  on(eventName: string, cb: Function) {\n    const fns = this.EventList[eventName];\n    if (Array.isArray(fns)) {\n      fns.push(cb);\n    } else {\n      this.EventList[eventName] = [cb];\n    }\n  }\n\n  /**\n   * 触发事件\n   * @param eventName 事件名称\n   * @param payload 传递参数\n   */\n  emit(eventName: string, ...payload: any) {\n    const fns = this.EventList[eventName];\n    if (Array.isArray(fns)) {\n      fns.forEach((fn) => fn(...payload));\n    }\n  }\n\n  /**\n   * 注销事件\n   * @param eventName 事件名称\n   * @param cb 传递参数\n   */\n  off(eventName: string, cb: Function) {\n    const fns = this.EventList[eventName];\n    const index = fns.find((fn: Function) => fn === cb);\n    if (Array.isArray(fns) && index) {\n      fns.splice(index, 1);\n    }\n  }\n}\n\nexport default CanvasSelect;\n"],"names":["Rect","coor","index","this","label","type","active","creating","dragging","Object","defineProperty","prototype","get","_a","__read","_b","x0","y0","_c","x1","y1","Polygon","length","Dot","CanvasSelect","el","imgSrc","lock","MIN_WIDTH","MIN_HEIGHT","strokeStyle","fillStyle","activeStrokeStyle","activeFillStyle","ctrlStrokeStyle","ctrlFillStyle","ctrlRadius","labelFillStyle","labelFont","labelMaxLen","EventList","dataset","remmberOrigin","createType","ctrlIndex","cursor","image","Image","originX","originY","scaleStep","container","document","querySelector","toString","call","includes","canvas","ctx","getContext","WIDTH","clientWidth","HEIGHT","clientHeight","offlineCanvas","createElement","width","height","offlineCtx","init","src","console","warn","find","x","IMAGE_ORIGIN_WIDTH","IMAGE_WIDTH","_this","style","userSelect","addEventListener","IMAGE_ORIGIN_HEIGHT","IMAGE_HEIGHT","fitZoom","emit","e","preventDefault","setScale","deltaY","offsetX","scale","offsetY","mousePoint","buttons","activeShape","ctrls","ctrlsData","findIndex","isPointInCircle","remmber","hoverOnShape","targetShapeIndex_1","targetShape","oncreating","forEach","item","i","splice","push","_d","y","pt","update","isInContent","pShape","_e","newShape","curPoint","sp","uuid","createUuid","movePoint","which","_f","_g","_h","_j","a0","b0","_k","a1","b1","concat","w","h","_l","t1","tar","Math","abs","pop","min","max","body","key","deleteByIndex","s","hexDigits","substr","floor","random","join","setData","data","indexOf","shape","targetShapeIndex","reduceRight","target","isPointInRect","isPointInPolygon","point","map","a","b","save","clearRect","translate","beginPath","round","moveTo","lineTo","closePath","fill","areaData","getImageData","restore","center","r","sqrt","pow","drawRect","strokeRect","fillRect","drawLabel","drawPolygon","stroke","drawDot","arc","PI","drawCtrl","drawCtrlList","newStr","text","measureText","toleft","toTop","font","strokeText","paintImage","drawImage","clear","num","calcStep","stayPosition","on","eventName","cb","fns","Array","isArray","payload","_i","arguments","fn","apply","__spreadArray","off"],"mappings":"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"}