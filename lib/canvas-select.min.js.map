{"version":3,"file":"canvas-select.min.js","sources":["../src/Rect.ts","../src/Polygon.ts","../src/Dot.ts","../src/main.ts"],"sourcesContent":["import { BaseShape, Point } from './Types';\n\nexport default class Rect implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 1\n\n  active: boolean = false\n\n  creating: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point[]\n\n  constructor(coor: Point[], index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n\n  get ctrlsData() {\n    const [[x0, y0], [x1, y1]] = this.coor;\n    return [\n      [x0, y0],\n      [x0 + (x1 - x0) / 2, y0],\n      [x1, y0],\n      [x1, y0 + (y1 - y0) / 2],\n      [x1, y1],\n      [x0 + (x1 - x0) / 2, y1],\n      [x0, y1],\n      [x0, y0 + (y1 - y0) / 2],\n    ];\n  }\n}\n","import { BaseShape, Point } from './Types';\n\nexport default class Polygon implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 2\n\n  active: boolean = false\n\n  creating: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point[]\n\n  constructor(coor: Point[], index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n\n  get ctrlsData() {\n    return this.coor.length > 2 ? this.coor : [];\n  }\n}\n","import { BaseShape, Point } from './Types';\n\nexport default class Dot implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 3\n\n  active: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point\n\n  constructor(coor: Point, index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n}\n","import Rect from './Rect';\nimport Polygon from './Polygon';\nimport Dot from './Dot';\nimport { Point } from './Types';\n\nclass CanvasSelect {\n  lock: boolean = false // 只读模式\n\n  MIN_WIDTH: number = 10\n\n  MIN_HEIGHT: number = 10\n\n  strokeStyle = 'rgb(0, 0, 255)'\n\n  fillStyle = 'rgba(0, 0, 255,0.1)'\n\n  activeStrokeStyle = '#f00'\n\n  activeFillStyle = 'rgba(255, 0, 0,0.1)'\n\n  ctrlStrokeStyle = '#000'\n\n  ctrlFillStyle = '#fff'\n\n  ctrlRadius = 3\n\n  labelFillStyle = '#fff'\n\n  labelFont = '12px serif #000'\n\n  labelMaxLen = 5\n\n  EventList: object = {}\n\n  WIDTH: number\n\n  HEIGHT: number\n\n  canvas: HTMLCanvasElement\n\n  ctx: CanvasRenderingContext2D\n\n  dataset: Array<Rect | Polygon | Dot> = []\n\n  offlineCanvas: HTMLCanvasElement\n\n  offlineCtx: CanvasRenderingContext2D\n\n  remmber: number[][] // 记录锚点距离\n\n  movePoint: Point // 记录鼠标位置\n\n  remmberOrigin: number[] = [0, 0] // 记录背景图鼠标位移\n\n  createType: number = 0 // 0 不创建，1 创建矩形，2 创建多边形，3 创建点\n\n  ctrlIndex: number = -1\n\n  cursor: string = 'auto'\n\n  image: HTMLImageElement = new Image()\n\n  IMAGE_ORIGIN_WIDTH: number;\n\n  IMAGE_WIDTH: number;\n\n  IMAGE_ORIGIN_HEIGHT: number;\n\n  IMAGE_HEIGHT: number;\n\n  originX: number = 0; // 原点x\n\n  originY: number = 0; // 原点y\n\n  scaleStep: number = 0; // 缩放步长\n\n  constructor(el: HTMLCanvasElement | string, imgSrc?: string) {\n    const container = typeof el === 'string' ? document.querySelector(el) : el;\n    if (Object.prototype.toString.call(container).includes('HTMLCanvasElement')) {\n      this.canvas = container as HTMLCanvasElement;\n      this.ctx = this.canvas.getContext('2d');\n      this.WIDTH = this.canvas.clientWidth;\n      this.HEIGHT = this.canvas.clientHeight;\n      this.offlineCanvas = document.createElement('canvas');\n      this.offlineCanvas.width = this.WIDTH;\n      this.offlineCanvas.height = this.HEIGHT;\n      this.offlineCtx = this.offlineCanvas.getContext('2d');\n      this.init();\n      if (imgSrc) this.image.src = imgSrc;\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('HTMLCanvasElement is required!');\n    }\n  }\n\n  get activeShape() {\n    return this.dataset.find((x: Rect | Polygon | Dot) => x.active);\n  }\n\n  get scale() {\n    if (this.IMAGE_ORIGIN_WIDTH && this.IMAGE_WIDTH) {\n      return this.IMAGE_WIDTH / this.IMAGE_ORIGIN_WIDTH;\n    }\n    return 1;\n  }\n  /**\n   * 初始化\n   */\n  init() {\n    this.canvas.style.userSelect = 'none';\n    this.image.addEventListener('load', () => {\n      this.IMAGE_ORIGIN_WIDTH = this.IMAGE_WIDTH = this.image.width;\n      this.IMAGE_ORIGIN_HEIGHT = this.IMAGE_HEIGHT = this.image.height;\n      this.fitZoom();\n      this.emit('load');\n    });\n    this.canvas.addEventListener('contextmenu', (e) => {\n      if (this.lock) return;\n      e.preventDefault();\n    });\n    this.canvas.addEventListener('mousewheel', (e: WheelEvent) => {\n      if (this.lock) return;\n      e.preventDefault();\n      this.setScale(e.deltaY < 0);\n    });\n    this.canvas.addEventListener('mousedown', (e: MouseEvent) => {\n      const offsetX = e.offsetX / this.scale;\n      const offsetY = e.offsetY / this.scale;\n      const mousePoint: Point = [e.offsetX, e.offsetY];\n      if (this.lock) return;\n      if (e.buttons === 2) { // 点击鼠标右键\n        this.remmberOrigin = [e.offsetX - this.originX, e.offsetY - this.originY];\n      } else if (e.buttons === 1) {\n        // 点击到控制点\n        const activeShape = this.activeShape as Rect | Polygon;\n        const ctrls = activeShape?.ctrlsData || [];\n        this.ctrlIndex = ctrls.findIndex((coor: Point) => this.isPointInCircle(mousePoint, coor, this.ctrlRadius));\n        if (this.ctrlIndex > -1) {\n          const [x0, y0] = ctrls[this.ctrlIndex];\n          this.remmber = [[offsetX - x0, offsetY - y0]];\n          return;\n        }\n        // 是否点击到形状\n        const [targetShapeIndex, targetShape] = this.hoverOnShape(mousePoint);\n        const oncreating = this.activeShape?.type === 2 && (this.activeShape as Polygon).creating;\n        if (!oncreating && targetShapeIndex > -1) {\n          this.emit('select', targetShape)\n          this.dataset.forEach((item, i) => {\n            item.active = i === targetShapeIndex;\n          });\n          targetShape.dragging = true;\n          this.dataset.splice(targetShapeIndex, 1);\n          this.dataset.push(targetShape);\n          this.remmber = [];\n          if (targetShape.type === 3) {\n            const [x, y] = (targetShape as Dot).coor;\n            this.remmber = [[offsetX - x, offsetY - y]];\n          } else {\n            targetShape.coor.forEach((pt: any) => {\n              this.remmber.push([offsetX - pt[0], offsetY - pt[1]]);\n            });\n          }\n          this.update();\n        } else if (oncreating) {\n          // 多边形新增点\n          if (this.isInContent(e)) {\n            const pShape = this.activeShape as Polygon;\n            const [x, y] = pShape.coor[pShape.coor.length - 1];\n            if (x !== offsetX && y !== offsetY) {\n              pShape.coor.push([offsetX - this.originX / this.scale, offsetY - this.originY / this.scale]);\n              this.update();\n            }\n          }\n        } else if (this.createType && this.isInContent(e)) {\n          // 创建矩形/多边形\n          let newShape;\n          const curPoint: Point = [offsetX - this.originX / this.scale, offsetY - this.originY / this.scale];\n          if (this.createType === 1) {\n            newShape = new Rect([curPoint, curPoint], this.dataset.length);\n            newShape.creating = true;\n          } else if (this.createType === 2) {\n            newShape = new Polygon([curPoint], this.dataset.length);\n            newShape.creating = true;\n          } else if (this.createType === 3) {\n            newShape = new Dot(curPoint, this.dataset.length);\n            this.emit('add', newShape)\n          }\n          this.dataset.forEach((sp) => { sp.active = false; });\n          newShape.active = true;\n          newShape.uuid = CanvasSelect.createUuid();\n          this.dataset.push(newShape);\n          this.update();\n        } else if (this.activeShape) {\n          this.activeShape.active = false;\n          this.update();\n        }\n      }\n    });\n    this.canvas.addEventListener('mousemove', (e: MouseEvent) => {\n      const offsetX = e.offsetX / this.scale;\n      const offsetY = e.offsetY / this.scale;\n      if (this.lock) return;\n      // 记录鼠标位置\n      this.movePoint = [offsetX, offsetY];\n      if (e.buttons === 2 && e.which === 3) {\n        // 拖动背景\n        this.originX = e.offsetX - this.remmberOrigin[0];\n        this.originY = e.offsetY - this.remmberOrigin[1];\n        this.update();\n      } else if (e.buttons === 1) {\n        if (this.activeShape) {\n          if (this.ctrlIndex > -1) {\n            const [[x, y]] = this.remmber;\n            this.emit('resize', this.activeShape);\n            // resize矩形\n            if (this.activeShape.type === 1) {\n              const [[x0, y0], [x1, y1]] = (this.activeShape as Rect).coor;\n              let coor: Point[] = [];\n              switch (this.ctrlIndex) {\n                case 0:\n                  coor = [[offsetX - x, offsetY - y], [x1, y1]];\n                  break;\n                case 1:\n                  coor = [[x0, offsetY - y], [x1, y1]];\n                  break;\n                case 2:\n                  coor = [[x0, offsetY - y], [offsetX - x, y1]];\n                  break;\n                case 3:\n                  coor = [[x0, y0], [offsetX - x, y1]];\n                  break;\n                case 4:\n                  coor = [[x0, y0], [offsetX - x, offsetY - y]];\n                  break;\n                case 5:\n                  coor = [[x0, y0], [x1, offsetY - y]];\n                  break;\n                case 6:\n                  coor = [[offsetX - x, y0], [x1, offsetY - y]];\n                  break;\n                case 7:\n                  coor = [[offsetX - x, y0], [x1, y1]];\n                  break;\n                default:\n                  break;\n              }\n              const [[a0, b0], [a1, b1]] = coor;\n              if ((a1 - a0) >= this.MIN_WIDTH && (b1 - b0) >= this.MIN_HEIGHT) {\n                this.activeShape.coor = coor;\n              } else {\n                this.emit('error', `宽不能小于${this.MIN_WIDTH},高不能小于${this.MIN_HEIGHT}。`);\n              }\n            } else if (this.activeShape.type === 2) {\n              this.activeShape.coor.splice(this.ctrlIndex, 1, [offsetX - this.originX / this.scale, offsetY - this.originY / this.scale]);\n            }\n            this.update();\n          } else if (this.activeShape.dragging) {\n            let coor = [];\n            const w = this.IMAGE_ORIGIN_WIDTH || this.WIDTH;\n            const h = this.IMAGE_ORIGIN_HEIGHT || this.HEIGHT;\n            if (this.activeShape.type === 3) {\n              const [t1, t2] = this.remmber[0];\n              const x = offsetX - t1;\n              const y = offsetY - t2;\n              if (x < 0 || x > w || y < 0 || y > h) return;\n              coor = [x, y];\n            } else {\n              for (let i = 0; i < this.activeShape.coor.length; i++) {\n                const tar = this.remmber[i];\n                const x = offsetX - tar[0];\n                const y = offsetY - tar[1];\n                if (x < 0 || x > w || y < 0 || y > h) return;\n                coor.push([x, y]);\n              }\n            }\n            (this.activeShape as any).coor = coor;\n            this.update();\n          } else if ((this.activeShape as Rect).creating && this.activeShape.type === 1 && this.isInContent(e)) {\n            const x = offsetX - this.originX / this.scale;\n            const y = offsetY - this.originY / this.scale;\n            this.activeShape.coor.splice(1, 1, [x, y]);\n          }\n        }\n        this.update();\n      } else if (this.activeShape?.type === 2 && (this.activeShape as Polygon)?.creating) {\n        this.update();\n      }\n    });\n    this.canvas.addEventListener('mouseup', (e) => {\n      if (this.lock) return;\n      this.remmber = [];\n      if (this.activeShape) {\n        this.activeShape.dragging = false;\n        if ((this.activeShape as Rect).creating && this.activeShape.type === 1) {\n          const [[x0, y0], [x1, y1]] = (this.activeShape as Rect).coor;\n          if (Math.abs(x0 - x1) < this.MIN_WIDTH || Math.abs(y0 - y1) < this.MIN_HEIGHT) {\n            this.dataset.pop();\n            this.emit('error', `宽不能小于${this.MIN_WIDTH},高不能小于${this.MIN_HEIGHT}`);\n          } else {\n            this.activeShape.coor = [[Math.min(x0, x1), Math.min(y0, y1)], [Math.max(x0, x1), Math.max(y0, y1)]];\n            (this.activeShape as Rect).creating = false;\n            this.emit('add', this.activeShape);\n          }\n          this.update();\n        }\n      }\n    });\n    this.canvas.addEventListener('dblclick', () => {\n      if (this.lock) return;\n      if (this.activeShape?.type === 2) {\n        if (this.activeShape.coor.length > 2) {\n          this.emit('add', this.activeShape);\n          (this.activeShape as Polygon).creating = false;\n          this.update();\n        }\n      }\n    });\n    document.body.addEventListener('keyup', (e: KeyboardEvent) => {\n      if (this.lock) return;\n      if (this.activeShape) {\n        console.log(this.activeShape.type)\n        if (this.activeShape.type === 2) {\n          console.log('jjjjj')\n          if (e.key === 'Escape') {\n            this.deleteByIndex(this.activeShape.index);\n          } else if (e.key === 'Backspace') {\n            if (this.activeShape.coor.length > 1 && (this.activeShape as Polygon).creating) {\n              this.activeShape.coor.pop();\n            } else {\n              this.deleteByIndex(this.activeShape.index);\n            }\n          }\n          this.update();\n        } else if (this.activeShape && e.key === 'Backspace') {\n          this.deleteByIndex(this.activeShape.index);\n        }\n      }\n\n    });\n  }\n\n  /**\n   * 生成uuid\n   * @returns\n   */\n  static createUuid(): string {\n    const s: any[] = [];\n    const hexDigits = '0123456789abcdef';\n    for (let i = 0; i < 36; i++) {\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n    s[14] = '4';\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\n    s[8] = s[13] = s[18] = s[23] = '-';\n    const uuid = s.join('');\n    return uuid;\n  }\n\n  /**\n   * 设置数据\n   * @param data Array\n   */\n  setData(data: any[]) {\n    data.forEach((item, index) => {\n      if (Object.prototype.toString.call(item).indexOf('Object') > -1) {\n        const {\n          label, type, coor, uuid,\n        } = item;\n        let shape: (Rect | Polygon | Dot);\n        switch (type) {\n          case 1:\n            shape = new Rect(coor as Point[], index);\n            break;\n          case 2:\n            shape = new Polygon(coor as Point[], index);\n            break;\n          case 3:\n            shape = new Dot(coor as Point, index);\n            break;\n          default:\n            break;\n        }\n        shape.label = (label || '').toString();\n        shape.uuid = uuid || CanvasSelect.createUuid();\n        this.dataset.push(shape);\n      } else {\n        this.emit('error', `${item} in data must be an enumerable Object.`);\n      }\n    });\n    this.update();\n  }\n  /**\n   * 判断是非在标注实例上\n   * @param mousePoint 点击位置\n   * @returns \n   */\n  hoverOnShape(mousePoint: Point): [number, Rect | Polygon | Dot] {\n    let targetShapeIndex = -1;\n    const targetShape = this.dataset.reduceRight((target, shape, i) => {\n      if (!target) {\n        if (\n          (shape.type === 3 && this.isPointInCircle(mousePoint, shape.coor as Point, 3))\n          || (shape.type === 1 && this.isPointInRect(mousePoint, (shape as Rect).coor))\n          || (shape.type === 2 && this.isPointInPolygon(mousePoint, (shape as Polygon).coor))\n        ) {\n          targetShapeIndex = i;\n          target = shape;\n        }\n      }\n      return target;\n    }, null);\n    return [targetShapeIndex, targetShape];\n  }\n\n  /**\n   * 判断鼠标是否在背景图内部\n   * @param e MouseEvent\n   * @returns 布尔值\n   */\n  isInContent(e: MouseEvent): boolean {\n    const offsetX = e.offsetX / this.scale;\n    const offsetY = e.offsetY / this.scale;\n    return offsetX >= this.originX / this.scale && offsetY >= this.originY / this.scale\n      && offsetX <= this.originX / this.scale + this.IMAGE_ORIGIN_WIDTH && offsetY <= this.originY / this.scale + this.IMAGE_ORIGIN_HEIGHT;\n  }\n  /**\n   * 判断是否在矩形内\n   * @param point 坐标\n   * @param coor 区域坐标\n   * @returns 布尔值\n   */\n  isPointInRect(point: Point, coor: Point[]): boolean {\n    const [x, y] = point;\n    const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\n    return x0 + this.originX <= x && x <= x1 + this.originX && y0 + this.originY <= y && y <= y1 + this.originY;\n  }\n  /**\n   * 判断是否在多边形内\n   * @param point 坐标\n   * @param coor 区域坐标\n   * @returns 布尔值\n   */\n  isPointInPolygon(point: Point, coor: Point[]): boolean {\n    this.offlineCtx.save();\n    this.offlineCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n    this.offlineCtx.translate(this.originX, this.originY);\n    this.offlineCtx.beginPath();\n    coor.forEach((pt, i) => {\n      const [x, y] = pt.map((a) => Math.round(a * this.scale));\n      if (i === 0) {\n        this.offlineCtx.moveTo(x, y);\n      } else {\n        this.offlineCtx.lineTo(x, y);\n      }\n    });\n    this.offlineCtx.closePath();\n    this.offlineCtx.fill();\n    const areaData = this.offlineCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\n    const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\n    this.offlineCtx.restore();\n    return areaData.data[index + 3] !== 0;\n  }\n  /**\n   * 判断是否在圆内\n   * @param point 坐标\n   * @param center 圆心\n   * @param r 半径\n   * @returns 布尔值\n   */\n  isPointInCircle(point: Point, center: Point, r: number): boolean {\n    const [x, y] = point;\n    const [x0, y0] = center.map((a) => a * this.scale);\n    const distance = Math.sqrt((x0 + this.originX - x) ** 2 + (y0 + this.originY - y) ** 2);\n    return distance <= r;\n  }\n  /**\n   * 绘制矩形\n   * @param shape 标注实例\n   * @returns \n   */\n  drawRect(shape: Rect) {\n    if (shape.coor.length !== 2) return;\n    const [[x0, y0], [x1, y1]] = shape.coor.map((a) => a.map((b) => Math.round(b * this.scale)));\n    this.ctx.save();\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.strokeStyle = (shape.active || shape.creating) ? this.activeStrokeStyle : this.strokeStyle;\n    const w = x1 - x0;\n    const h = y1 - y0;\n    this.ctx.strokeRect(x0, y0, w, h);\n    if (!shape.creating) this.ctx.fillRect(x0, y0, w, h);\n    this.ctx.restore();\n    this.drawLabel(shape.coor[0], shape.label);\n  }\n  /**\n   * 绘制多边形\n   * @param shape 标注实例\n   */\n  drawPolygon(shape: Polygon) {\n    this.ctx.save();\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.strokeStyle = (shape.active || shape.creating) ? this.activeStrokeStyle : this.strokeStyle;\n    this.ctx.beginPath();\n    shape.coor.forEach((el, i) => {\n      const [x, y] = el.map((a) => Math.round(a * this.scale));\n      if (i === 0) {\n        this.ctx.moveTo(x, y);\n      } else {\n        this.ctx.lineTo(x, y);\n      }\n    });\n    if (shape.creating) {\n      const [x, y] = this.movePoint.map((a) => Math.round(a * this.scale));\n      this.ctx.lineTo(x - this.originX, y - this.originY);\n    } else if (shape.coor.length > 2) {\n      this.ctx.closePath();\n    }\n    this.ctx.fill();\n    this.ctx.stroke();\n    this.ctx.restore();\n    this.drawLabel(shape.coor[0], shape.label);\n  }\n  /**\n   * 绘制点\n   * @param shape 标注实例\n   */\n  drawDot(shape: Dot) {\n    const [x, y] = shape.coor.map((a) => a * this.scale);\n    this.ctx.save();\n    this.ctx.fillStyle = this.ctrlFillStyle;\n    this.ctx.strokeStyle = shape.active ? this.activeStrokeStyle : this.strokeStyle;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.fill();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.stroke();\n    this.ctx.restore();\n    this.drawLabel(shape.coor, shape.label);\n  }\n  /**\n   * 绘制控制点\n   * @param point 坐标\n   */\n  drawCtrl(point: Point) {\n    const [x, y] = point.map((a) => a * this.scale);\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.ctrlFillStyle;\n    this.ctx.strokeStyle = this.ctrlStrokeStyle;\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.fill();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n  /**\n   * 绘制控制点列表\n   * @param shape 标注实例\n   */\n  drawCtrlList(shape: Rect | Polygon) {\n    shape.ctrlsData.forEach((point) => {\n      this.drawCtrl(point);\n    });\n  }\n  /**\n   * 绘制label\n   * @param point 位置\n   * @param label 文本\n   */\n  drawLabel(point: Point, label: string = '') {\n    if (label.length) {\n      const newStr = label.length < this.labelMaxLen + 1 ? label : (`${label.substr(0, this.labelMaxLen)}...`);\n      const text = this.ctx.measureText(newStr);\n      const [x, y] = point.map((a) => a * this.scale);\n      const toleft = (this.IMAGE_ORIGIN_WIDTH - point[0]) < (text.width + 4) / this.scale;\n      const toTop = (this.IMAGE_ORIGIN_HEIGHT - point[1]) < 16 / this.scale;\n      this.ctx.save();\n      this.ctx.fillStyle = this.labelFillStyle;\n      this.ctx.fillRect(toleft ? (x - text.width - 3) : (x + 1), toTop ? (y - 15) : y + 1, text.width + 4, 16);\n      this.ctx.font = this.labelFont;\n      this.ctx.strokeText(newStr, toleft ? (x - text.width - 2) : (x + 2), toTop ? (y - 4) : y + 12, 80);\n      this.ctx.restore();\n    }\n  }\n\n  /**\n   * 绘制背景图片\n   */\n  paintImage() {\n    this.ctx.drawImage(this.image, 0, 0, this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n  }\n\n  /**\n   * 更新画布\n   */\n  update() {\n    this.ctx.save();\n    this.clear();\n    this.ctx.translate(this.originX, this.originY);\n    this.paintImage();\n    this.dataset.forEach((shape) => {\n      switch (shape.type) {\n        case 1:\n          this.drawRect(shape as Rect);\n          break;\n        case 2:\n          this.drawPolygon(shape as Polygon);\n          break;\n        case 3:\n          this.drawDot(shape as Dot);\n          break;\n        default:\n          break;\n      }\n    });\n    if (this.activeShape && [1, 2].includes(this.activeShape.type)) {\n      this.drawCtrlList(this.activeShape as Rect | Polygon);\n    }\n    this.ctx.restore();\n  }\n\n  /**\n   * 删除指定矩形\n   * @param index number\n   */\n  deleteByIndex(index: number) {\n    const num = this.dataset.findIndex((x) => x.index === index);\n    if (num > -1) {\n      this.emit('delete', this.dataset[num]);\n      this.dataset.splice(num, 1);\n      this.dataset.forEach((item, i) => { item.index = i; });\n      this.update();\n    }\n  }\n\n  /**\n   * 计算缩放步长\n   * @param init 是否为init\n   */\n  calcStep(init?: boolean) {\n    if (init) {\n      this.scaleStep = 100;\n      this.setScale(false);\n    }\n    if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\n      this.setScale(false);\n      this.calcStep();\n    }\n  }\n\n  /**\n   * 缩放\n   * @param type true放大，false，缩小\n   */\n  setScale(type: boolean) {\n    if (this.lock) return;\n    if ((!type && this.IMAGE_WIDTH <= 20) || (type && this.IMAGE_WIDTH >= this.WIDTH * 100)) return;\n    if (type) { this.scaleStep++; } else { this.scaleStep--; }\n    const abs = Math.abs(this.scaleStep);\n    const width = this.IMAGE_WIDTH;\n    this.IMAGE_WIDTH = Math.round(this.IMAGE_ORIGIN_WIDTH * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n    this.IMAGE_HEIGHT = Math.round(this.IMAGE_ORIGIN_HEIGHT * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n    this.stayPosition(this.IMAGE_WIDTH / width);\n    this.update();\n  }\n\n  /**\n   * 适配背景图\n   */\n  fitZoom() {\n    this.calcStep(true);\n    if (this.IMAGE_HEIGHT / this.IMAGE_WIDTH >= this.HEIGHT / this.WIDTH) {\n      this.IMAGE_WIDTH = this.IMAGE_ORIGIN_WIDTH / (this.IMAGE_ORIGIN_HEIGHT / this.HEIGHT);\n      this.IMAGE_HEIGHT = this.HEIGHT;\n    } else {\n      this.IMAGE_WIDTH = this.WIDTH;\n      this.IMAGE_HEIGHT = this.IMAGE_ORIGIN_HEIGHT / (this.IMAGE_ORIGIN_WIDTH / this.WIDTH);\n    }\n    this.originX = (this.WIDTH - this.IMAGE_WIDTH) / 2;\n    this.originY = (this.HEIGHT - this.IMAGE_HEIGHT) / 2;\n    this.update();\n  }\n\n  /**\n   * 保持缩放中心\n   * @param scale nummer\n   */\n  stayPosition(scale: number) {\n    this.originX = this.WIDTH / 2 - (this.WIDTH / 2 - this.originX) * scale;\n    this.originY = this.HEIGHT / 2 - (this.HEIGHT / 2 - this.originY) * scale;\n  }\n\n  /**\n   * 注册事件\n   * @param eventName 事件名称\n   * @param cb 回调方法\n   */\n  on(eventName: string, cb: Function) {\n    const fns = this.EventList[eventName];\n    if (Array.isArray(fns)) {\n      fns.push(cb);\n    } else {\n      this.EventList[eventName] = [cb];\n    }\n  }\n\n  /**\n   * 触发事件\n   * @param eventName 事件名称\n   * @param payload 传递参数\n   */\n  emit(eventName: string, ...payload: any) {\n    const fns = this.EventList[eventName];\n    if (Array.isArray(fns)) {\n      fns.forEach((fn) => fn(...payload));\n    }\n  }\n\n  /**\n   * 注销事件\n   * @param eventName 事件名称\n   * @param cb 传递参数\n   */\n  off(eventName: string, cb: Function) {\n    const fns = this.EventList[eventName];\n    const index = fns.find((fn: Function) => fn === cb);\n    if (Array.isArray(fns) && index) {\n      fns.splice(index, 1);\n    }\n  }\n}\n\nexport default CanvasSelect;\n"],"names":["coor","index","this","Object","Rect","_a","__read","_b","x0","y0","_c","x1","y1","Polygon","length","el","imgSrc","Image","container","document","querySelector","prototype","toString","call","includes","canvas","ctx","getContext","WIDTH","clientWidth","HEIGHT","clientHeight","offlineCanvas","createElement","width","height","offlineCtx","init","image","src","console","warn","CanvasSelect","dataset","find","x","active","IMAGE_ORIGIN_WIDTH","IMAGE_WIDTH","style","userSelect","addEventListener","_this","IMAGE_ORIGIN_HEIGHT","IMAGE_HEIGHT","fitZoom","emit","e","lock","preventDefault","setScale","deltaY","offsetX","scale","offsetY","mousePoint","buttons","remmberOrigin","originX","originY","activeShape","ctrls","ctrlsData","ctrlIndex","findIndex","isPointInCircle","ctrlRadius","remmber","hoverOnShape","targetShapeIndex_1","targetShape","oncreating","type","creating","forEach","item","i","dragging","splice","push","_d","y","pt","update","isInContent","pShape","_e","createType","newShape","curPoint","Dot","sp","uuid","createUuid","movePoint","which","_f","_g","_h","_j","a0","b0","_k","a1","b1","MIN_WIDTH","MIN_HEIGHT","w","h","_l","t1","tar","Math","abs","pop","min","max","body","log","key","deleteByIndex","s","hexDigits","substr","floor","random","join","data","indexOf","label","shape","targetShapeIndex","reduceRight","target","isPointInRect","isPointInPolygon","point","map","a","b","save","clearRect","translate","beginPath","round","moveTo","lineTo","closePath","fill","areaData","getImageData","restore","center","r","sqrt","fillStyle","strokeStyle","activeStrokeStyle","strokeRect","fillRect","drawLabel","stroke","ctrlFillStyle","arc","PI","ctrlStrokeStyle","drawCtrl","newStr","labelMaxLen","text","measureText","toleft","toTop","labelFillStyle","font","labelFont","strokeText","drawImage","clear","paintImage","drawRect","drawPolygon","drawDot","drawCtrlList","num","scaleStep","calcStep","stayPosition","eventName","cb","fns","EventList","Array","isArray","_i","payload","fn"],"mappings":"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"}