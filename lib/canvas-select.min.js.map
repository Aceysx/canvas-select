{"version":3,"file":"canvas-select.min.js","sources":["../src/Rect.ts","../src/Polygon.ts","../src/Dot.ts","../src/main.ts"],"sourcesContent":["import { BaseShape, Point } from './Types';\n\nexport default class Rect implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 1\n\n  active: boolean = false\n\n  creating: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point[]\n\n  constructor(coor: Point[], index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n\n  get ctrlsData() {\n    const [[x0, y0], [x1, y1]] = this.coor;\n    return [\n      [x0, y0],\n      [x0 + (x1 - x0) / 2, y0],\n      [x1, y0],\n      [x1, y0 + (y1 - y0) / 2],\n      [x1, y1],\n      [x0 + (x1 - x0) / 2, y1],\n      [x0, y1],\n      [x0, y0 + (y1 - y0) / 2],\n    ];\n  }\n}\n","import { BaseShape, Point } from './Types';\n\nexport default class Polygon implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 2\n\n  active: boolean = false\n\n  creating: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point[]\n\n  constructor(coor: Point[], index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n\n  get ctrlsData() {\n    return this.coor.length > 2 ? this.coor : [];\n  }\n}\n","import { BaseShape, Point } from './Types';\n\nexport default class Dot implements BaseShape {\n  index: number\n\n  label: string = ''\n\n  type: number = 3\n\n  active: boolean = false\n\n  dragging: boolean = false\n\n  coor: Point\n\n  constructor(coor: Point, index: number) {\n    this.coor = coor;\n    this.index = index;\n  }\n\n  uuid: string\n}\n","import Rect from './Rect';\nimport Polygon from './Polygon';\nimport Dot from './Dot';\nimport { Point } from './Types';\n\nclass CanvasSelect {\n  lock: boolean = false // 只读模式\n\n  MIN_WIDTH: number = 10\n\n  MIN_HEIGHT: number = 10\n\n  strokeStyle = 'rgb(0, 0, 255)'\n\n  fillStyle = 'rgba(0, 0, 255,0.1)'\n\n  activeStrokeStyle = '#f00'\n\n  activeFillStyle = 'rgba(255, 0, 0,0.1)'\n\n  ctrlStrokeStyle = '#000'\n\n  ctrlFillStyle = '#fff'\n\n  ctrlRadius = 3\n\n  labelFillStyle = '#fff'\n\n  labelFont = '12px serif #000'\n\n  labelMaxLen = 5\n\n  EventList: object = {}\n\n  WIDTH: number\n\n  HEIGHT: number\n\n  canvas: HTMLCanvasElement\n\n  ctx: CanvasRenderingContext2D\n\n  dataset: Array<Rect | Polygon | Dot> = []\n\n  offlineCanvas: HTMLCanvasElement\n\n  offlineCtx: CanvasRenderingContext2D\n\n  remmber: number[][] // 记录锚点距离\n\n  movePoint: Point // 记录鼠标位置\n\n  remmberOrigin: number[] = [0, 0] // 记录背景图鼠标位移\n\n  createType: number = 0 // 0 不创建，1 创建矩形，2 创建多边形，3 创建点\n\n  ctrlIndex: number = -1\n\n  cursor: string = 'auto'\n\n  image: HTMLImageElement = new Image()\n\n  IMAGE_ORIGIN_WIDTH: number;\n\n  IMAGE_WIDTH: number;\n\n  IMAGE_ORIGIN_HEIGHT: number;\n\n  IMAGE_HEIGHT: number;\n\n  originX: number = 0; // 原点x\n\n  originY: number = 0; // 原点y\n\n  scaleStep: number = 0; // 缩放步长\n\n  constructor(el: HTMLCanvasElement | string, imgSrc?: string) {\n    const container = typeof el === 'string' ? document.querySelector(el) : el;\n    if (Object.prototype.toString.call(container).includes('HTMLCanvasElement')) {\n      this.canvas = container as HTMLCanvasElement;\n      this.ctx = this.canvas.getContext('2d');\n      this.WIDTH = this.canvas.clientWidth;\n      this.HEIGHT = this.canvas.clientHeight;\n      this.offlineCanvas = document.createElement('canvas');\n      this.offlineCanvas.width = this.WIDTH;\n      this.offlineCanvas.height = this.HEIGHT;\n      this.offlineCtx = this.offlineCanvas.getContext('2d');\n      this.init();\n      if (imgSrc) this.image.src = imgSrc;\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('HTMLCanvasElement is required!');\n    }\n  }\n\n  get activeShape() {\n    return this.dataset.find((x: Rect | Polygon | Dot) => x.active);\n  }\n\n  get scale() {\n    if (this.IMAGE_ORIGIN_WIDTH && this.IMAGE_WIDTH) {\n      return this.IMAGE_WIDTH / this.IMAGE_ORIGIN_WIDTH;\n    }\n    return 1;\n  }\n  /**\n   * 初始化\n   */\n  init() {\n    this.canvas.style.userSelect = 'none';\n    this.image.addEventListener('load', () => {\n      this.IMAGE_ORIGIN_WIDTH = this.IMAGE_WIDTH = this.image.width;\n      this.IMAGE_ORIGIN_HEIGHT = this.IMAGE_HEIGHT = this.image.height;\n      this.fitZoom();\n      this.emit('load');\n    });\n    this.canvas.addEventListener('contextmenu', (e) => {\n      if (this.lock) return;\n      e.preventDefault();\n    });\n    this.canvas.addEventListener('mousewheel', (e: WheelEvent) => {\n      if (this.lock) return;\n      e.preventDefault();\n      this.setScale(e.deltaY < 0);\n    });\n    this.canvas.addEventListener('mousedown', (e: MouseEvent) => {\n      const offsetX = e.offsetX / this.scale;\n      const offsetY = e.offsetY / this.scale;\n      const mousePoint: Point = [e.offsetX, e.offsetY];\n      if (this.lock) return;\n      if (e.buttons === 2) { // 点击鼠标右键\n        this.remmberOrigin = [e.offsetX - this.originX, e.offsetY - this.originY];\n      } else if (e.buttons === 1) {\n        // 点击到控制点\n        const activeShape = this.activeShape as Rect | Polygon;\n        const ctrls = activeShape?.ctrlsData || [];\n        this.ctrlIndex = ctrls.findIndex((coor: Point) => this.isPointInCircle(mousePoint, coor, this.ctrlRadius));\n        if (this.ctrlIndex > -1) {\n          const [x0, y0] = ctrls[this.ctrlIndex];\n          this.remmber = [[offsetX - x0, offsetY - y0]];\n          return;\n        }\n        // 是否点击到形状\n        const [targetShapeIndex, targetShape] = this.hoverOnShape(mousePoint);\n        const oncreating = this.activeShape?.type === 2 && (this.activeShape as Polygon).creating;\n        if (!oncreating && targetShapeIndex > -1) {\n          this.emit('select', targetShape)\n          this.dataset.forEach((item, i) => {\n            item.active = i === targetShapeIndex;\n          });\n          targetShape.dragging = true;\n          this.dataset.splice(targetShapeIndex, 1);\n          this.dataset.push(targetShape);\n          this.remmber = [];\n          if (targetShape.type === 3) {\n            const [x, y] = (targetShape as Dot).coor;\n            this.remmber = [[offsetX - x, offsetY - y]];\n          } else {\n            targetShape.coor.forEach((pt: any) => {\n              this.remmber.push([offsetX - pt[0], offsetY - pt[1]]);\n            });\n          }\n          this.update();\n        } else if (oncreating && this.isInContent(e)) {\n          // 多边形新增点\n          const pShape = this.activeShape as Polygon;\n          const [x, y] = pShape.coor[pShape.coor.length - 1];\n          if (x !== offsetX && y !== offsetY) {\n            pShape.coor.push([offsetX - this.originX / this.scale, offsetY - this.originY / this.scale]);\n            this.update();\n          }\n        } else if (this.createType && this.isInContent(e)) {\n          // 创建矩形/多边形\n          let newShape;\n          const curPoint: Point = [offsetX - this.originX / this.scale, offsetY - this.originY / this.scale];\n          if (this.createType === 1) {\n            newShape = new Rect([curPoint, curPoint], this.dataset.length);\n            newShape.creating = true;\n          } else if (this.createType === 2) {\n            newShape = new Polygon([curPoint], this.dataset.length);\n            newShape.creating = true;\n          } else if (this.createType === 3) {\n            newShape = new Dot(curPoint, this.dataset.length);\n            this.emit('add', newShape)\n          }\n          this.dataset.forEach((sp) => { sp.active = false; });\n          newShape.active = true;\n          newShape.uuid = CanvasSelect.createUuid();\n          this.dataset.push(newShape);\n          this.update();\n        } else if (this.activeShape) {\n          this.activeShape.active = false;\n          this.update();\n        }\n      }\n    });\n    this.canvas.addEventListener('mousemove', (e: MouseEvent) => {\n      const offsetX = e.offsetX / this.scale;\n      const offsetY = e.offsetY / this.scale;\n      if (this.lock) return;\n      // 记录鼠标位置\n      this.movePoint = [offsetX, offsetY];\n      if (e.buttons === 2 && e.which === 3) {\n        // 拖动背景\n        this.originX = e.offsetX - this.remmberOrigin[0];\n        this.originY = e.offsetY - this.remmberOrigin[1];\n        this.update();\n      } else if (e.buttons === 1) {\n        if (this.activeShape) {\n          if (this.ctrlIndex > -1) {\n            const [[x, y]] = this.remmber;\n            this.emit('resize', this.activeShape);\n            // resize矩形\n            if (this.activeShape.type === 1) {\n              const [[x0, y0], [x1, y1]] = (this.activeShape as Rect).coor;\n              let coor: Point[] = [];\n              switch (this.ctrlIndex) {\n                case 0:\n                  coor = [[offsetX - x, offsetY - y], [x1, y1]];\n                  break;\n                case 1:\n                  coor = [[x0, offsetY - y], [x1, y1]];\n                  break;\n                case 2:\n                  coor = [[x0, offsetY - y], [offsetX - x, y1]];\n                  break;\n                case 3:\n                  coor = [[x0, y0], [offsetX - x, y1]];\n                  break;\n                case 4:\n                  coor = [[x0, y0], [offsetX - x, offsetY - y]];\n                  break;\n                case 5:\n                  coor = [[x0, y0], [x1, offsetY - y]];\n                  break;\n                case 6:\n                  coor = [[offsetX - x, y0], [x1, offsetY - y]];\n                  break;\n                case 7:\n                  coor = [[offsetX - x, y0], [x1, y1]];\n                  break;\n                default:\n                  break;\n              }\n              const [[a0, b0], [a1, b1]] = coor;\n              if ((a1 - a0) >= this.MIN_WIDTH && (b1 - b0) >= this.MIN_HEIGHT) {\n                this.activeShape.coor = coor;\n              } else {\n                this.emit('error', `宽不能小于${this.MIN_WIDTH},高不能小于${this.MIN_HEIGHT}。`);\n              }\n            } else if (this.activeShape.type === 2) {\n              this.activeShape.coor.splice(this.ctrlIndex, 1, [offsetX - this.originX / this.scale, offsetY - this.originY / this.scale]);\n            }\n            this.update();\n          } else if (this.activeShape.dragging) {\n            let coor = [];\n            const w = this.IMAGE_ORIGIN_WIDTH || this.WIDTH;\n            const h = this.IMAGE_ORIGIN_HEIGHT || this.HEIGHT;\n            if (this.activeShape.type === 3) {\n              const [t1, t2] = this.remmber[0];\n              const x = offsetX - t1;\n              const y = offsetY - t2;\n              if (x < 0 || x > w || y < 0 || y > h) return;\n              coor = [x, y];\n            } else {\n              for (let i = 0; i < this.activeShape.coor.length; i++) {\n                const tar = this.remmber[i];\n                const x = offsetX - tar[0];\n                const y = offsetY - tar[1];\n                if (x < 0 || x > w || y < 0 || y > h) return;\n                coor.push([x, y]);\n              }\n            }\n            (this.activeShape as any).coor = coor;\n            this.update();\n          } else if ((this.activeShape as Rect).creating && this.activeShape.type === 1 && this.isInContent(e)) {\n            const x = offsetX - this.originX / this.scale;\n            const y = offsetY - this.originY / this.scale;\n            this.activeShape.coor.splice(1, 1, [x, y]);\n          }\n        }\n        this.update();\n      } else if (this.activeShape?.type === 2 && (this.activeShape as Polygon)?.creating) {\n        this.update();\n      }\n    });\n    this.canvas.addEventListener('mouseup', () => {\n      if (this.lock) return;\n      this.remmber = [];\n      if (this.activeShape) {\n        this.activeShape.dragging = false;\n        if ((this.activeShape as Rect).creating && this.activeShape.type === 1) {\n          const [[x0, y0], [x1, y1]] = (this.activeShape as Rect).coor;\n          if (Math.abs(x0 - x1) < this.MIN_WIDTH || Math.abs(y0 - y1) < this.MIN_HEIGHT) {\n            this.dataset.pop();\n            this.emit('error', `宽不能小于${this.MIN_WIDTH},高不能小于${this.MIN_HEIGHT}`);\n          } else {\n            this.activeShape.coor = [[Math.min(x0, x1), Math.min(y0, y1)], [Math.max(x0, x1), Math.max(y0, y1)]];\n            (this.activeShape as Rect).creating = false;\n            this.emit('add', this.activeShape);\n          }\n          this.update();\n        }\n      }\n    });\n    this.canvas.addEventListener('dblclick', () => {\n      if (this.lock) return;\n      if (this.activeShape?.type === 2) {\n        if (this.activeShape.coor.length > 2) {\n          this.emit('add', this.activeShape);\n          (this.activeShape as Polygon).creating = false;\n          this.update();\n        }\n      }\n    });\n    document.body.addEventListener('keyup', (e: KeyboardEvent) => {\n      if (this.lock) return;\n      const activeShape = this.activeShape as Polygon;\n      if (activeShape?.type === 2) {\n        if (e.key === 'Escape') {\n          this.dataset.pop();\n        } else if (e.key === 'Backspace') {\n          if (this.activeShape.coor.length > 1) {\n            this.activeShape.coor.pop();\n          } else {\n            this.dataset.pop();\n          }\n        }\n        this.update();\n      }\n      if (this.activeShape && e.key === 'Backspace') {\n        this.deleteByIndex(this.activeShape.index);\n      }\n    });\n  }\n\n  /**\n   * 生成uuid\n   * @returns\n   */\n  static createUuid(): string {\n    const s: any[] = [];\n    const hexDigits = '0123456789abcdef';\n    for (let i = 0; i < 36; i++) {\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n    s[14] = '4';\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\n    s[8] = s[13] = s[18] = s[23] = '-';\n    const uuid = s.join('');\n    return uuid;\n  }\n\n  /**\n   * 设置数据\n   * @param data Array\n   */\n  setData(data: any[]) {\n    data.forEach((item, index) => {\n      if (Object.prototype.toString.call(item).indexOf('Object') > -1) {\n        const {\n          label, type, coor, uuid,\n        } = item;\n        let shape: (Rect | Polygon | Dot);\n        switch (type) {\n          case 1:\n            shape = new Rect(coor as Point[], index);\n            break;\n          case 2:\n            shape = new Polygon(coor as Point[], index);\n            break;\n          case 3:\n            shape = new Dot(coor as Point, index);\n            break;\n          default:\n            break;\n        }\n        shape.label = (label || '').toString();\n        shape.uuid = uuid || CanvasSelect.createUuid();\n        this.dataset.push(shape);\n      } else {\n        this.emit('error', `${item} in data must be an enumerable Object.`);\n      }\n    });\n    this.update();\n  }\n  /**\n   * 判断是非在标注实例上\n   * @param mousePoint 点击位置\n   * @returns \n   */\n  hoverOnShape(mousePoint: Point): [number, Rect | Polygon | Dot] {\n    let targetShapeIndex = -1;\n    const targetShape = this.dataset.reduceRight((target, shape, i) => {\n      if (!target) {\n        if (\n          (shape.type === 3 && this.isPointInCircle(mousePoint, shape.coor as Point, 3))\n          || (shape.type === 1 && this.isPointInRect(mousePoint, (shape as Rect).coor))\n          || (shape.type === 2 && this.isPointInPolygon(mousePoint, (shape as Polygon).coor))\n        ) {\n          targetShapeIndex = i;\n          target = shape;\n        }\n      }\n      return target;\n    }, null);\n    return [targetShapeIndex, targetShape];\n  }\n\n  /**\n   * 判断鼠标是否在背景图内部\n   * @param e MouseEvent\n   * @returns 布尔值\n   */\n  isInContent(e: MouseEvent): boolean {\n    const offsetX = e.offsetX / this.scale;\n    const offsetY = e.offsetY / this.scale;\n    return offsetX >= this.originX / this.scale && offsetY >= this.originY / this.scale\n      && offsetX <= this.originX / this.scale + this.IMAGE_ORIGIN_WIDTH && offsetY <= this.originY / this.scale + this.IMAGE_ORIGIN_HEIGHT;\n  }\n  /**\n   * 判断是否在矩形内\n   * @param point 坐标\n   * @param coor 区域坐标\n   * @returns 布尔值\n   */\n  isPointInRect(point: Point, coor: Point[]): boolean {\n    const [x, y] = point;\n    const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\n    return x0 + this.originX <= x && x <= x1 + this.originX && y0 + this.originY <= y && y <= y1 + this.originY;\n  }\n  /**\n   * 判断是否在多边形内\n   * @param point 坐标\n   * @param coor 区域坐标\n   * @returns 布尔值\n   */\n  isPointInPolygon(point: Point, coor: Point[]): boolean {\n    this.offlineCtx.save();\n    this.offlineCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n    this.offlineCtx.translate(this.originX, this.originY);\n    this.offlineCtx.beginPath();\n    coor.forEach((pt, i) => {\n      const [x, y] = pt.map((a) => Math.round(a * this.scale));\n      if (i === 0) {\n        this.offlineCtx.moveTo(x, y);\n      } else {\n        this.offlineCtx.lineTo(x, y);\n      }\n    });\n    this.offlineCtx.closePath();\n    this.offlineCtx.fill();\n    const areaData = this.offlineCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\n    const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\n    this.offlineCtx.restore();\n    return areaData.data[index + 3] !== 0;\n  }\n  /**\n   * 判断是否在圆内\n   * @param point 坐标\n   * @param center 圆心\n   * @param r 半径\n   * @returns 布尔值\n   */\n  isPointInCircle(point: Point, center: Point, r: number): boolean {\n    const [x, y] = point;\n    const [x0, y0] = center.map((a) => a * this.scale);\n    const distance = Math.sqrt((x0 + this.originX - x) ** 2 + (y0 + this.originY - y) ** 2);\n    return distance <= r;\n  }\n  /**\n   * 绘制矩形\n   * @param shape 标注实例\n   * @returns \n   */\n  drawRect(shape: Rect) {\n    if (shape.coor.length !== 2) return;\n    const [[x0, y0], [x1, y1]] = shape.coor.map((a) => a.map((b) => Math.round(b * this.scale)));\n    this.ctx.save();\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.strokeStyle = (shape.active || shape.creating) ? this.activeStrokeStyle : this.strokeStyle;\n    const w = x1 - x0;\n    const h = y1 - y0;\n    this.ctx.strokeRect(x0, y0, w, h);\n    if (!shape.creating) this.ctx.fillRect(x0, y0, w, h);\n    this.ctx.restore();\n    this.drawLabel(shape.coor[0], shape.label);\n  }\n  /**\n   * 绘制多边形\n   * @param shape 标注实例\n   */\n  drawPolygon(shape: Polygon) {\n    this.ctx.save();\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.strokeStyle = (shape.active || shape.creating) ? this.activeStrokeStyle : this.strokeStyle;\n    this.ctx.beginPath();\n    shape.coor.forEach((el, i) => {\n      const [x, y] = el.map((a) => Math.round(a * this.scale));\n      if (i === 0) {\n        this.ctx.moveTo(x, y);\n      } else {\n        this.ctx.lineTo(x, y);\n      }\n    });\n    if (shape.creating) {\n      const [x, y] = this.movePoint.map((a) => Math.round(a * this.scale));\n      this.ctx.lineTo(x - this.originX, y - this.originY);\n    } else if (shape.coor.length > 2) {\n      this.ctx.closePath();\n    }\n    this.ctx.fill();\n    this.ctx.stroke();\n    this.ctx.restore();\n    this.drawLabel(shape.coor[0], shape.label);\n  }\n  /**\n   * 绘制点\n   * @param shape 标注实例\n   */\n  drawDot(shape: Dot) {\n    const [x, y] = shape.coor.map((a) => a * this.scale);\n    this.ctx.save();\n    this.ctx.fillStyle = this.ctrlFillStyle;\n    this.ctx.strokeStyle = shape.active ? this.activeStrokeStyle : this.strokeStyle;\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.fill();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.stroke();\n    this.ctx.restore();\n    this.drawLabel(shape.coor, shape.label);\n  }\n  /**\n   * 绘制控制点\n   * @param point 坐标\n   */\n  drawCtrl(point: Point) {\n    const [x, y] = point.map((a) => a * this.scale);\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.ctrlFillStyle;\n    this.ctx.strokeStyle = this.ctrlStrokeStyle;\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.fill();\n    this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n  /**\n   * 绘制控制点列表\n   * @param shape 标注实例\n   */\n  drawCtrlList(shape: Rect | Polygon) {\n    shape.ctrlsData.forEach((point) => {\n      this.drawCtrl(point);\n    });\n  }\n  /**\n   * 绘制label\n   * @param point 位置\n   * @param label 文本\n   */\n  drawLabel(point: Point, label: string = '') {\n    if (label.length) {\n      const newStr = label.length < this.labelMaxLen + 1 ? label : (`${label.substr(0, this.labelMaxLen)}...`);\n      const text = this.ctx.measureText(newStr);\n      const [x, y] = point.map((a) => a * this.scale);\n      const toleft = (this.IMAGE_ORIGIN_WIDTH - point[0]) < (text.width + 4) / this.scale;\n      const toTop = (this.IMAGE_ORIGIN_HEIGHT - point[1]) < 16 / this.scale;\n      this.ctx.save();\n      this.ctx.fillStyle = this.labelFillStyle;\n      this.ctx.fillRect(toleft ? (x - text.width - 3) : (x + 1), toTop ? (y - 15) : y + 1, text.width + 4, 16);\n      this.ctx.font = this.labelFont;\n      this.ctx.strokeText(newStr, toleft ? (x - text.width - 2) : (x + 2), toTop ? (y - 4) : y + 12, 80);\n      this.ctx.restore();\n    }\n  }\n\n  /**\n   * 绘制背景图片\n   */\n  paintImage() {\n    this.ctx.drawImage(this.image, 0, 0, this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n  }\n\n  /**\n   * 更新画布\n   */\n  update() {\n    this.ctx.save();\n    this.clear();\n    this.ctx.translate(this.originX, this.originY);\n    this.paintImage();\n    this.dataset.forEach((shape) => {\n      switch (shape.type) {\n        case 1:\n          this.drawRect(shape as Rect);\n          break;\n        case 2:\n          this.drawPolygon(shape as Polygon);\n          break;\n        case 3:\n          this.drawDot(shape as Dot);\n          break;\n        default:\n          break;\n      }\n    });\n    if (this.activeShape && [1, 2].includes(this.activeShape.type)) {\n      this.drawCtrlList(this.activeShape as Rect | Polygon);\n    }\n    this.ctx.restore();\n  }\n\n  /**\n   * 删除指定矩形\n   * @param index number\n   */\n  deleteByIndex(index: number) {\n    const num = this.dataset.findIndex((x) => x.index === index);\n    if (num > -1) {\n      this.emit('delete', this.dataset[num]);\n      this.dataset.splice(num, 1);\n      this.dataset.forEach((item, i) => { item.index = i; });\n      this.update();\n    }\n  }\n\n  /**\n   * 计算缩放步长\n   * @param init 是否为init\n   */\n  calcStep(init?: boolean) {\n    if (init) {\n      this.scaleStep = 100;\n      this.setScale(false);\n    }\n    if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\n      this.setScale(false);\n      this.calcStep();\n    }\n  }\n\n  /**\n   * 缩放\n   * @param type true放大，false，缩小\n   */\n  setScale(type: boolean) {\n    if (this.lock) return;\n    if ((!type && this.IMAGE_WIDTH <= 20) || (type && this.IMAGE_WIDTH >= this.WIDTH * 100)) return;\n    if (type) { this.scaleStep++; } else { this.scaleStep--; }\n    const abs = Math.abs(this.scaleStep);\n    const width = this.IMAGE_WIDTH;\n    this.IMAGE_WIDTH = Math.round(this.IMAGE_ORIGIN_WIDTH * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n    this.IMAGE_HEIGHT = Math.round(this.IMAGE_ORIGIN_HEIGHT * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n    this.stayPosition(this.IMAGE_WIDTH / width);\n    this.update();\n  }\n\n  /**\n   * 适配背景图\n   */\n  fitZoom() {\n    this.calcStep(true);\n    if (this.IMAGE_HEIGHT / this.IMAGE_WIDTH >= this.HEIGHT / this.WIDTH) {\n      this.IMAGE_WIDTH = this.IMAGE_ORIGIN_WIDTH / (this.IMAGE_ORIGIN_HEIGHT / this.HEIGHT);\n      this.IMAGE_HEIGHT = this.HEIGHT;\n    } else {\n      this.IMAGE_WIDTH = this.WIDTH;\n      this.IMAGE_HEIGHT = this.IMAGE_ORIGIN_HEIGHT / (this.IMAGE_ORIGIN_WIDTH / this.WIDTH);\n    }\n    this.originX = (this.WIDTH - this.IMAGE_WIDTH) / 2;\n    this.originY = (this.HEIGHT - this.IMAGE_HEIGHT) / 2;\n    this.update();\n  }\n\n  /**\n   * 保持缩放中心\n   * @param scale nummer\n   */\n  stayPosition(scale: number) {\n    this.originX = this.WIDTH / 2 - (this.WIDTH / 2 - this.originX) * scale;\n    this.originY = this.HEIGHT / 2 - (this.HEIGHT / 2 - this.originY) * scale;\n  }\n\n  /**\n   * 注册事件\n   * @param eventName 事件名称\n   * @param cb 回调方法\n   */\n  on(eventName: string, cb: Function) {\n    const fns = this.EventList[eventName];\n    if (Array.isArray(fns)) {\n      fns.push(cb);\n    } else {\n      this.EventList[eventName] = [cb];\n    }\n  }\n\n  /**\n   * 触发事件\n   * @param eventName 事件名称\n   * @param payload 传递参数\n   */\n  emit(eventName: string, ...payload: any) {\n    const fns = this.EventList[eventName];\n    if (Array.isArray(fns)) {\n      fns.forEach((fn) => fn(...payload));\n    }\n  }\n\n  /**\n   * 注销事件\n   * @param eventName 事件名称\n   * @param cb 传递参数\n   */\n  off(eventName: string, cb: Function) {\n    const fns = this.EventList[eventName];\n    const index = fns.find((fn: Function) => fn === cb);\n    if (Array.isArray(fns) && index) {\n      fns.splice(index, 1);\n    }\n  }\n}\n\nexport default CanvasSelect;\n"],"names":["Object","Rect","_a","__read","this","coor","_b","x0","y0","_c","x1","y1","index","Polygon","length","el","imgSrc","Image","container","document","querySelector","prototype","toString","call","includes","canvas","ctx","getContext","WIDTH","clientWidth","HEIGHT","clientHeight","offlineCanvas","createElement","width","height","offlineCtx","init","image","src","console","warn","CanvasSelect","dataset","find","x","active","IMAGE_ORIGIN_WIDTH","IMAGE_WIDTH","style","userSelect","addEventListener","_this","IMAGE_ORIGIN_HEIGHT","IMAGE_HEIGHT","fitZoom","emit","e","lock","preventDefault","setScale","deltaY","ctrls","targetShapeIndex_1","targetShape","_e","y","newShape","offsetX","scale","offsetY","mousePoint","buttons","remmberOrigin","originX","originY","activeShape","ctrlsData","ctrlIndex","findIndex","isPointInCircle","ctrlRadius","remmber","hoverOnShape","oncreating","type","creating","forEach","item","i","dragging","splice","push","_d","pt","update","isInContent","pShape","createType","curPoint","Dot","sp","uuid","createUuid","movePoint","which","_f","_g","_h","_j","a0","b0","_k","a1","b1","MIN_WIDTH","MIN_HEIGHT","w","h","_l","t1","tar","Math","abs","pop","min","max","body","key","deleteByIndex","s","hexDigits","substr","floor","random","join","data","indexOf","label","shape","targetShapeIndex","reduceRight","target","isPointInRect","isPointInPolygon","point","map","a","b","save","clearRect","translate","beginPath","round","moveTo","lineTo","closePath","fill","areaData","getImageData","restore","center","r","sqrt","fillStyle","strokeStyle","activeStrokeStyle","strokeRect","fillRect","drawLabel","stroke","ctrlFillStyle","arc","PI","ctrlStrokeStyle","drawCtrl","newStr","text","toleft","labelMaxLen","measureText","toTop","labelFillStyle","font","labelFont","strokeText","drawImage","clear","paintImage","drawRect","drawPolygon","drawDot","drawCtrlList","num","scaleStep","calcStep","stayPosition","eventName","cb","fns","EventList","Array","isArray","_i","payload","fn"],"mappings":"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"}